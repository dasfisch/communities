<?xml version="1.0" encoding="UTF-8"?>

<project name="Communities" default="deploy">
	
	<property name="repo" value="git@github.com:dasfisch/communities.git" />
	<property name="host" value="" override="true"/>
	<property name="username" value="stateadm" />
	<property name="branch" value="master" override="true" />
	
	<property name="and" value="&amp;&amp;" />
	<property name="git.clone" value="git clone ${repo}" />
	<property name="git.status" value="git status" />
	
	
	<property name="dir.localRepo" value="~/phing-deploy/communities/" />
	<property name="dir.remoteDir" value="" />
	
	
	<!-- SSH to server -->
	<target name="input">
		
		<property name="hosts" value="dev,int,qa" />
		
		<input propertyName="env"  message="Which environment would you like to deploy to?" validargs="${hosts}" />
		
		
		<!-- DEV -->
		<if>
			<equals arg1="${env}" arg2="dev" />
		<then>
			<property name="host" value="uxdev" override="true" />
		</then>
		
		</if>
		
		<!-- INT -->
		<if>
			<equals arg1="${env}" arg2="int" />
		<then>
			<property name="host" value="uxint" override="true" />
		</then>
		
		</if>
		
		<!-- QA -->
		<if>
			<equals arg1="${env}" arg2="qa" />
		<then>
			<property name="host" value="comapp401p.qa.ch4.s.com" override="true" />
		</then>
		
		</if>
		
		<phingcall target="branch"></phingcall>
	<!-- <exec command="ssh ${username}@${host} 'pwd ${and} ls -la'" outputProperty="ssh_output"/>
		<echo msg="${ssh_output}" /> -->
		
	</target>
	
	<target name="deploy" depends="input"> 
	
		
	
	</target>
	
	<target name="repoDir">
	
		<available file="${dir.localRepo}" type="dir" property="dir_exists" />
		
		<if>
			<not> 
				<isset property="dir.exists" /> 
			</not>
			<then>
				<!-- Create dir -->
				<mkdir dir="${dir.localRepo}" />
			</then>
			
		</if>
		
		<!-- Change to dir -->
		<exec command="cd ${dir.localRepo}" />
	
	</target>
	
	<target name="branch">
		
		<trycatch property="localRepoCheckoutTest">
		
			<try>
				
				<!-- Checkout branch--> 
				<exec command="cd /etc ${and} ${git.status}" outputProperty="git_status_check" />
				
				<!-- <echo msg="${git_status_check}" /> -->
			</try>
			
			<catch>
				<echo msg="Git status failed." />
			</catch>
			
			<finally>
			
			</finally>
		
		
		</trycatch>
		<echo msg="${localRepoCheckoutTest}" />
		
	</target>



</project>
	
	
	